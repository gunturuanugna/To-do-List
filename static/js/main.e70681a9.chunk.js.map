{"version":3,"sources":["components/Tasks.js","components/Sidebar.js","components/Content.js","components/Header.js","App.js","index.js"],"names":["FORMAT","formatDate","date","format","locale","dateFnsFormat","AddTask","onCancel","onAddTask","useState","task","setTask","setDate","className","value","onChange","event","target","disabled","onClick","onDayChange","day","placeholder","Date","dayPickerProps","modifiers","before","TASKS_HEADER_MAPPING","INBOX","TODAY","NEXT_7","TaskItems","selectedTab","tasks","tasksToRender","filter","isAfter","isBefore","addDays","isToday","map","text","Tasks","showAddTask","setShowAddTask","setTasks","prevState","newTaskItem","length","Sidebar","setSelectedTab","Content","Header","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e70681a9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport \"react-day-picker/lib/style.css\";\r\nimport dateFnsFormat from \"date-fns/format\";\r\nimport isAfter from \"date-fns/isAfter\";\r\nimport isBefore from \"date-fns/isBefore\";\r\nimport addDays from \"date-fns/addDays\";\r\nimport isToday from \"date-fns/isToday\";\r\n\r\nconst FORMAT = \"dd/MM/yyyy\";\r\nfunction formatDate(date, format, locale) {\r\n  return dateFnsFormat(date, format, { locale });\r\n}\r\nconst AddTask = ({ onCancel, onAddTask }) => {\r\n  const [task, setTask] = useState(\"\");\r\n  const [date, setDate] = useState(null);\r\n  return (\r\n    <div className=\"add-task-dialog\">\r\n      <input value={task} onChange={(event) => setTask(event.target.value)} />\r\n      <div className=\"add-task-actions-container\">\r\n        <div className=\"btns-container\">\r\n          <button\r\n            disabled={!task}\r\n            className=\"add-btn\"\r\n            onClick={() => {\r\n              onAddTask(task, date);\r\n              onCancel();\r\n              setTask(\"\");\r\n            }}\r\n          >\r\n            Add Task\r\n          </button>\r\n          <button\r\n            className=\"cancel-btn\"\r\n            onClick={() => {\r\n              onCancel();\r\n              setTask(\"\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n        <div className=\"icon-container\">\r\n          <DayPickerInput\r\n            onDayChange={(day) => setDate(day)}\r\n            placeholder={`${dateFnsFormat(new Date(), FORMAT)}`}\r\n            formatDate={formatDate}\r\n            format={FORMAT}\r\n            dayPickerProps={{\r\n              modifiers: {\r\n                disabled: [{ before: new Date() }],\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TASKS_HEADER_MAPPING = {\r\n  INBOX: \"Inbox\",\r\n  TODAY: \"Today\",\r\n  NEXT_7: \"Next 7 days\",\r\n};\r\n\r\nconst TaskItems = ({ selectedTab, tasks }) => {\r\n  let tasksToRender = [...tasks];\r\n  if (selectedTab === \"NEXT_7\") {\r\n    tasksToRender = tasksToRender.filter(\r\n      (task) =>\r\n        isAfter(task.date, new Date()) &&\r\n        isBefore(task.date, addDays(new Date(), 7))\r\n    );\r\n  }\r\n\r\n  if (selectedTab === \"TODAY\") {\r\n    tasksToRender = tasksToRender.filter((task) => isToday(task.date));\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-items-container\">\r\n      {tasksToRender.map((task) => (\r\n        <div key={task.text} className=\"task-item\">\r\n          <p>{task.text}</p>\r\n          <p>{dateFnsFormat(new Date(task.date), FORMAT)}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Tasks = ({ selectedTab }) => {\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  const addNewTask = (text, date) => {\r\n    const newTaskItem = { text, date: date || new Date() };\r\n    setTasks((prevState) => [...prevState, newTaskItem]);\r\n  };\r\n  return (\r\n    <div className=\"tasks\">\r\n      <h1>{TASKS_HEADER_MAPPING[selectedTab]}</h1>\r\n      {selectedTab === \"INBOX\" ? (\r\n        <div\r\n          className=\"add-task-btn\"\r\n          onClick={() => setShowAddTask((prevState) => !prevState)}\r\n        >\r\n          <span className=\"plus\">+</span>\r\n          <span className=\"add-task-text\">Add Task</span>\r\n        </div>\r\n      ) : null}\r\n      {showAddTask && (\r\n        <AddTask\r\n          onAddTask={addNewTask}\r\n          onCancel={() => setShowAddTask(false)}\r\n        />\r\n      )}\r\n      {tasks.length > 0 ? (\r\n        <TaskItems tasks={tasks} selectedTab={selectedTab} />\r\n      ) : (\r\n        <p>No tasks yet</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;","import React from \"react\";\r\nimport { FaInbox, FaRegCalendarAlt, FaRegCalendar } from \"react-icons/fa\";\r\n\r\nconst Sidebar = ({ selectedTab, setSelectedTab }) => {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div\r\n        className={selectedTab === \"INBOX\" ? \"active\" : \"\"}\r\n        onClick={() => setSelectedTab(\"INBOX\")}\r\n      >\r\n        <FaInbox className=\"icon\" />\r\n        Inbox\r\n      </div>\r\n      <div\r\n        className={selectedTab === \"TODAY\" ? \"active\" : \"\"}\r\n        onClick={() => setSelectedTab(\"TODAY\")}\r\n      >\r\n        <FaRegCalendarAlt className=\"icon\" />\r\n        Today\r\n      </div>\r\n      <div\r\n        className={selectedTab === \"NEXT_7\" ? \"active\" : \"\"}\r\n        onClick={() => setSelectedTab(\"NEXT_7\")}\r\n      >\r\n        <FaRegCalendar className=\"icon\" />\r\n        Next 7 days\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;","import React, { useState } from \"react\";\r\nimport Tasks from \"./Tasks\";\r\nimport Sidebar from \"./Sidebar\";\r\n\r\n// INBOX\r\n// NEXT_7\r\n// TODAY\r\n\r\nconst Content = () => {\r\n  const [selectedTab, setSelectedTab] = useState(\"INBOX\");\r\n  return (\r\n    <section className=\"content\">\r\n      <Sidebar selectedTab={selectedTab} setSelectedTab={setSelectedTab} />\r\n      <Tasks selectedTab={selectedTab} />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Content;","import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className='header'>\r\n            <nav>\r\n                <div className=\"logo\">\r\n                    <h1>To Do List</h1>\r\n                </div>\r\n            </nav>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react';\r\nimport Content from './components/Content';\r\nimport Header from './components/Header';\r\nimport './App.css';\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <Content/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App/>,document.getElementById(\"root\"));\r\n"],"sourceRoot":""}